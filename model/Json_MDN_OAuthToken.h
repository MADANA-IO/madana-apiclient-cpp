/**
 * madana-api
 * <h1>API Quickstart Guide</h1>        <p>This documentation contains a Quickstart Guide, a few <a href=\"downloads.html\">sample clients</a>  for download and information about the available  <a href=\"resources.html\">endpoints</a>  and  <a href=\"data.html\">DataTypes</a>  </p>     <p>The <a target=\"_blank\" href=\"http://madana-explorer-staging.eu-central-1.elasticbeanstalk.com/login\">  MADANA Explorer</a> can be used to verify the interactions with the API</p>           <p>Internal use only. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a></p>         <br> <br>
 *
 * The version of the OpenAPI document: 0.4.12
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Json_MDN_OAuthToken.h
 *
 * 
 */

#ifndef COM_MADANA_CLIENT_MODEL_Json_MDN_OAuthToken_H_
#define COM_MADANA_CLIENT_MODEL_Json_MDN_OAuthToken_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace madana {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Json_MDN_OAuthToken
    : public ModelBase
{
public:
    Json_MDN_OAuthToken();
    virtual ~Json_MDN_OAuthToken();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Json_MDN_OAuthToken members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getToken() const;
    bool tokenIsSet() const;
    void unsetToken();

    void setToken(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getVerifier() const;
    bool verifierIsSet() const;
    void unsetVerifier();

    void setVerifier(const utility::string_t& value);


protected:
    utility::string_t m_Token;
    bool m_TokenIsSet;
    utility::string_t m_Verifier;
    bool m_VerifierIsSet;
};


}
}
}
}

#endif /* COM_MADANA_CLIENT_MODEL_Json_MDN_OAuthToken_H_ */
